generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model EventSector {
  idEvent  Int      @map("idEvent")
  idPlace  Int      @map("idPlace")
  idSector Int      @map("idSector")
  price    Decimal  @db.Decimal(10, 2)
  event    event    @relation(fields: [idEvent], references: [idEvent])
  sector   Sector   @relation(fields: [idSector, idPlace], references: [idSector, idPlace])
  tickets  Ticket[]

  @@id([idEvent, idPlace, idSector])
  @@index([idSector, idPlace])
  @@map("event_sector")
}

model EventType {
  idType Int     @id @default(autoincrement()) @map("idType")
  name   String  @db.VarChar(45)
  event  event[]

  @@map("eventtype")
}

model Organiser {
  idOrganiser  Int     @id @default(autoincrement()) @map("idOrganiser")
  companyName  String? @map("company_name") @db.VarChar(100)
  cuil         String? @unique @map("cuil") @db.VarChar(20)
  contactEmail String? @unique @map("contact_email") @db.VarChar(100)
  password     String  @db.VarChar(255)
  phone        String? @db.VarChar(20)
  address      String? @db.VarChar(100)
  event        event[]

  @@map("organiser_company")
}

model Place {
  idPlace   Int      @id @default(autoincrement()) @map("idPlace")
  name      String   @db.VarChar(45)
  totalCap  Int      @map("totalCap")
  address   String   @db.VarChar(45)
  placeType String   @db.VarChar(45)
  event     event[]
  sectors   Sector[]

  @@map("places")
}

model SaleItem {
  idSale     Int         @map("idSale")
  quantity   Int
  lineNumber Int         @map("lineNumber")
  sale       Sale        @relation(fields: [idSale], references: [idSale])
  seatEvents SeatEvent[] @relation("SeatEventToSaleItem")
  tickets    Ticket[]

  @@id([idSale, lineNumber])
  @@index([idSale])
  @@map("saleitem")
}

model Sale {
  idSale    Int        @id @default(autoincrement()) @map("idSale")
  date      DateTime   @db.DateTime(0)
  dniClient Int        @map("dniClient")
  saleItems SaleItem[]
  client    User       @relation(fields: [dniClient], references: [dni])

  @@index([dniClient])
  @@map("sales")
}

model Seat {
  idSeat     Int         @map("idSeat")
  idSector   Int         @map("idSector")
  idPlace    Int         @map("idPlace")
  seatEvents SeatEvent[]
  sector     Sector      @relation(fields: [idSector, idPlace], references: [idSector, idPlace])
  tickets    Ticket[]

  @@id([idSeat, idSector, idPlace])
  @@unique([idPlace, idSector, idSeat])
  @@index([idSector, idPlace])
  @@map("seats")
}

model SeatEvent {
  idEvent    Int
  idPlace    Int
  idSector   Int
  idSeat     Int       @map("idSeat")
  state      String    @default("available") @db.VarChar(45)
  idSale     Int?
  lineNumber Int?      @map("lineNumber")
  event      event     @relation(fields: [idEvent], references: [idEvent], onDelete: Cascade)
  saleItem   SaleItem? @relation("SeatEventToSaleItem", fields: [idSale, lineNumber], references: [idSale, lineNumber])
  seat       Seat      @relation(fields: [idSeat, idSector, idPlace], references: [idSeat, idSector, idPlace], onDelete: Cascade)

  @@id([idEvent, idPlace, idSector, idSeat])
  @@index([idSeat, idSector, idPlace])
  @@index([idSale, lineNumber])
  @@map("seat_event")
}

model Sector {
  idSector     Int           @map("idSector")
  idPlace      Int           @map("idPlace")
  name         String        @db.VarChar(45)
  capacity     Int
  sectorType   String        @db.VarChar(45)
  eventSectors EventSector[]
  seats        Seat[]
  place        Place         @relation(fields: [idPlace], references: [idPlace])

  @@id([idSector, idPlace])
  @@index([idPlace])
  @@map("sectors")
}

model Ticket {
  idEvent     Int         @map("idEvent")
  idPlace     Int         @map("idPlace")
  idSector    Int         @map("idSector")
  idTicket    Int         @map("idTicket")
  state       String      @default("available") @db.VarChar(45)
  idSeat      Int         @map("idSeat")
  idSale      Int?        @map("idSale")
  lineNumber  Int?        @map("lineNumber")
  event       event       @relation(fields: [idEvent], references: [idEvent])
  eventSector EventSector @relation(fields: [idEvent, idPlace, idSector], references: [idEvent, idPlace, idSector])
  seat        Seat        @relation(fields: [idPlace, idSector, idSeat], references: [idPlace, idSector, idSeat])
  saleItem    SaleItem?   @relation(fields: [idSale, lineNumber], references: [idSale, lineNumber])

  @@id([idEvent, idPlace, idSector, idTicket])
  @@unique([idEvent, idPlace, idSector, idSeat], name: "ticket_by_seat")
  @@index([idSale, lineNumber])
  @@index([idPlace, idSector, idSeat])
  @@map("ticket")
}

model User {
  dni       Int      @id @map("dni")
  name      String   @db.VarChar(25)
  surname   String   @db.VarChar(25)
  mail      String   @unique @db.VarChar(60)
  birthDate DateTime @db.Date
  password  String   @db.VarChar(255)
  role      Role     @default(user)
  sales     Sale[]

  @@map("users")
}

model event {
  idEvent           Int           @id @default(autoincrement())
  name              String        @db.VarChar(45)
  description       String        @db.VarChar(255)
  date              DateTime      @db.DateTime(0)
  state             String        @db.VarChar(45)
  image             String?       @db.VarChar(255)
  featured          Boolean       @default(false)
  idEventType       Int
  idOrganiser       Int
  idPlace           Int
  eventtype         EventType     @relation(fields: [idEventType], references: [idType], map: "Event_idEventType_fkey")
  organiser_company Organiser     @relation(fields: [idOrganiser], references: [idOrganiser], map: "Event_idOrganiser_fkey")
  places            Place         @relation(fields: [idPlace], references: [idPlace], map: "Event_idPlace_fkey")
  eventSectors      EventSector[]
  seatEvents        SeatEvent[]
  tickets           Ticket[]

  @@index([idEventType], map: "Event_idEventType_idx")
  @@index([idOrganiser], map: "Event_idOrganiser_idx")
  @@index([idPlace], map: "Event_idPlace_idx")
}

enum Role {
  user
  admin
}
